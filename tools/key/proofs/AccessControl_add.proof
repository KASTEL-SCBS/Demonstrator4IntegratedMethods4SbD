\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Sep 26 10:21:29 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../../pcc-imp-webservice/src/main/java/edu/kit/informatik/pcc/service/accesscontrol";

\proofObligation "#Proof Obligation Settings
#Thu Sep 26 10:21:29 CEST 2019
contract=edu.kit.informatik.pcc.service.accesscontrol.AccessControl[edu.kit.informatik.pcc.service.accesscontrol.AccessControl\\:\\:add(int,edu.kit.informatik.pcc.service.accesscontrol.IntegerRole)].JML normal_behavior operation contract.0
name=edu.kit.informatik.pcc.service.accesscontrol.AccessControl[edu.kit.informatik.pcc.service.accesscontrol.AccessControl\\:\\:add(int,edu.kit.informatik.pcc.service.accesscontrol.IntegerRole)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "jonas" ) (keyVersion "1fcdc525bf"))

(autoModeTime "1772")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "id,role,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "9") (term "0,0,0,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
 (builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "elementOfUnion" (formula "9") (term "0,0,0,0,1,0,1"))
 (builtin "One Step Simplification" (formula "9"))
(rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "notLeft" (formula "7"))
(rule "eqSymm" (formula "10"))
(rule "eqSymm" (formula "7"))
(rule "sortsDisjointModuloNull" (formula "10"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "9"))
 (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
(rule "false_right" (formula "10"))
(rule "nonNull" (formula "6") (inst "i=i"))
(rule "greater_literals" (formula "6") (term "0,1"))
 (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "9")))
(rule "sub_literals" (formula "6") (term "2,1,0"))
 (builtin "One Step Simplification" (formula "6"))
(rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "9"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "7"))
(rule "commute_and" (formula "6") (term "0,0"))
(rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_add,savedHeapBefore_add"))
 (builtin "One Step Simplification" (formula "12"))
(rule "variableDeclarationAssign" (formula "12") (term "1"))
(rule "variableDeclaration" (formula "12") (term "1") (newnames "pos"))
 (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_posOfId,result_0,exc_0") (contract "edu.kit.informatik.pcc.service.accesscontrol.AccessControl[edu.kit.informatik.pcc.service.accesscontrol.AccessControl::posOfId(int)].JML normal_behavior operation contract.0"))
(branch "Post (posOfId)"
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "10"))
   (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1"))
   (rule "assignment" (formula "16") (term "1"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "11") (ifseqformula "3"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "13"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "12"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "13"))
   (rule "notLeft" (formula "12"))
   (rule "eqSymm" (formula "12"))
   (rule "eqSymm" (formula "12"))
   (rule "sortsDisjointModuloNull" (formula "12"))
   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "14"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "13")))
   (rule "false_right" (formula "12"))
   (rule "nonNull" (formula "11") (inst "i=i"))
   (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
   (rule "greater_literals" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "13"))
   (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
   (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "7"))
   (rule "commute_and" (formula "10") (term "1"))
   (rule "commute_and" (formula "9") (term "0,0,1"))
   (rule "commute_and" (formula "11") (term "0,0"))
   (rule "ifElseUnfold" (formula "15") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "15") (term "1") (newnames "x"))
   (rule "greater_equal_than_comparison_simple" (formula "15") (term "1"))
    (builtin "One Step Simplification" (formula "15"))
   (rule "arrayLengthIsAnInt" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "true_left" (formula "7"))
   (rule "arrayLengthNotNegative" (formula "7") (term "1"))
   (rule "arrayLengthIsAnInt" (formula "8") (term "0"))
    (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "arrayLengthNotNegative" (formula "8") (term "0"))
   (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
   (rule "ifElseSplit" (formula "16"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
       (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "eval_order_array_access1" (formula "18") (term "1") (inst "#v0=i_arr"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "i_arr"))
      (rule "assignment_read_attribute_this" (formula "18"))
       (builtin "One Step Simplification" (formula "18"))
      (rule "assignment_to_reference_array_component" (formula "18"))
      (branch "Normal Execution (i_arr != null)"
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallReturn" (formula "18") (term "1"))
         (rule "assignment" (formula "18") (term "1"))
          (builtin "One Step Simplification" (formula "18"))
         (rule "methodCallEmpty" (formula "18") (term "1"))
         (rule "tryEmpty" (formula "18") (term "1"))
         (rule "emptyModality" (formula "18") (term "1"))
         (rule "andRight" (formula "18"))
         (branch "Case 1"
            (rule "andRight" (formula "18"))
            (branch "Case 1"
               (rule "andRight" (formula "18"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "dismissNonSelectedField" (formula "18") (term "1,0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "18") (term "0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "18") (term "1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "nnf_ex2all" (formula "17"))
                  (rule "nnf_imp2or" (formula "8") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "1,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "commute_or" (formula "1") (term "1,0"))
                  (rule "commute_or" (formula "8") (term "0,0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "shift_paren_or" (formula "1") (term "0"))
                  (rule "commute_or_2" (formula "1") (term "0,0"))
                  (rule "commute_or" (formula "1") (term "0,0,0"))
                  (rule "allLeft" (formula "8") (inst "t=result_0"))
                  (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (term "1,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "8") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
                  (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "8") (term "0,0,1"))
                  (rule "leq_literals" (formula "8") (term "0,1"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "notLeft" (formula "8"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "3"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "11") (term "0,0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "18"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "16") (term "0") (ifseqformula "4"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "17"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "allLeft" (formula "3") (inst "t=result_0"))
                  (rule "inEqSimp_commuteGeq" (formula "3") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "16"))
                  (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0"))
                  (rule "add_literals" (formula "3") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "3") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfStore" (formula "3"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "castDel" (formula "3") (term "0"))
                  (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "notLeft" (formula "4"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "18"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                  (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "eqSymm" (formula "17"))
                  (rule "close" (formula "17") (ifseqformula "16"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
                  (rule "mul_literals" (formula "11") (term "1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                  (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "17") (ifseqformula "4"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1"))
                  (rule "eqSymm" (formula "17") (term "0,1"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "17") (term "0,0,0,0,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
                  (rule "eqSymm" (formula "17") (term "1,0"))
                  (rule "replace_known_left" (formula "17") (term "1,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,0,1,0"))
                  (rule "replace_known_right" (formula "17") (term "0,0,1,0") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
                  (rule "replace_known_right" (formula "17") (term "0,1,0") (ifseqformula "14"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "sortsDisjointModuloNull" (formula "17") (term "0,1"))
                  (rule "replace_known_right" (formula "17") (term "1,0,1") (ifseqformula "13"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "nonNull" (formula "17") (inst "i=i"))
                  (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")))
                  (rule "greater_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "allRight" (formula "17") (inst "sk=i_0"))
                  (rule "impRight" (formula "17"))
                  (rule "andLeft" (formula "1"))
                  (rule "notRight" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "12"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "6") (ifseqformula "18"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                  (rule "ifEqualsNull" (formula "1"))
                  (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "allLeft" (formula "11") (inst "t=i_0"))
                  (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "4"))
                  (rule "andLeft" (formula "11"))
                  (rule "inEqSimp_homoInEq1" (formula "11"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0"))
                  (rule "add_zero_right" (formula "11") (term "0"))
                  (rule "leq_literals" (formula "11"))
                  (rule "closeFalse" (formula "11"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "18"))
               (rule "closeTrue" (formula "18"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "18"))
            (rule "allRight" (formula "18") (inst "sk=f_0"))
            (rule "allRight" (formula "18") (inst "sk=o_0"))
            (rule "orRight" (formula "18"))
            (rule "orRight" (formula "18"))
            (rule "orRight" (formula "18"))
            (rule "eqSymm" (formula "21"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0"))
            (rule "mul_literals" (formula "11") (term "1,0"))
            (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "1"))
            (rule "qeq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfStore" (formula "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "19"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Null Reference (i_arr = null)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (i_arr != null, but pos Out of Bounds!)"
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
          (builtin "One Step Simplification" (formula "19"))
         (rule "false_right" (formula "19"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "13") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "1") (term "0,0,1"))
         (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0"))
         (rule "mul_literals" (formula "12") (term "1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "13"))
         (rule "polySimp_mulLiterals" (formula "13") (term "0"))
         (rule "polySimp_elimOne" (formula "13") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "13"))
         (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
         (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
         (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0,0"))
         (rule "leq_literals" (formula "1") (term "0,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
         (rule "qeq_literals" (formula "2") (term "0"))
          (builtin "One Step Simplification" (formula "2"))
         (rule "closeFalse" (formula "2"))
      )
      (branch "Array Store Exception (incompatible dynamic element type of i_arr and _role)"
          (opengoal " ")
      )
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "17"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "12"))
       (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "zeroPos"))
       (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_posOfId_0,result_1,exc_1") (contract "edu.kit.informatik.pcc.service.accesscontrol.AccessControl[edu.kit.informatik.pcc.service.accesscontrol.AccessControl::posOfId(int)].JML normal_behavior operation contract.0"))
      (branch "Post (posOfId)"
          (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1"))
         (rule "assignment" (formula "20") (term "1"))
          (builtin "One Step Simplification" (formula "20"))
         (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "14") (ifseqformula "3"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "16"))
         (rule "notLeft" (formula "15"))
         (rule "eqSymm" (formula "16"))
         (rule "eqSymm" (formula "15"))
         (rule "sortsDisjointModuloNull" (formula "15"))
         (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "18"))
          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
         (rule "false_right" (formula "15"))
         (rule "nonNull" (formula "14") (inst "i=i"))
         (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
          (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "17")))
         (rule "greater_literals" (formula "14") (term "0"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "17"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "8"))
         (rule "commute_and" (formula "13") (term "1"))
         (rule "commute_and" (formula "12") (term "0,0,1"))
         (rule "commute_and" (formula "14") (term "0,0"))
         (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_1"))
         (rule "less_than_comparison_simple" (formula "19") (term "1"))
          (builtin "One Step Simplification" (formula "19"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "8"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "17"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "ifSplit" (formula "21"))
         (branch "if x_1 true"
             (builtin "One Step Simplification" (formula "22"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallReturn" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "assignment" (formula "22") (term "1"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "methodCallEmpty" (formula "22") (term "1"))
            (rule "tryEmpty" (formula "22") (term "1"))
            (rule "emptyModality" (formula "22") (term "1"))
            (rule "andRight" (formula "22"))
            (branch "Case 1"
               (rule "andRight" (formula "22"))
               (branch "Case 1"
                  (rule "andRight" (formula "22"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "notRight" (formula "22"))
                     (rule "exLeft" (formula "1") (inst "sk=i_0"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "21"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_zero_right" (formula "6") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,0"))
                     (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                     (rule "mul_literals" (formula "6") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "6"))
                     (rule "qeq_literals" (formula "21") (term "0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "commute_or" (formula "20") (term "0,0"))
                     (rule "commute_or" (formula "18") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "allLeft" (formula "18") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "18") (term "0,1") (ifseqformula "4"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "18") (term "0,0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "3"))
                     (rule "andLeft" (formula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "18"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                     (rule "add_literals" (formula "18") (term "1,1,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0"))
                     (rule "add_zero_right" (formula "18") (term "0"))
                     (rule "leq_literals" (formula "18"))
                     (rule "closeFalse" (formula "18"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_geqRight" (formula "17"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "17") (term "0,0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                     (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "1,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                     (rule "commute_or_2" (formula "8") (term "0"))
                     (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "21") (ifseqformula "5"))
                     (rule "eqSymm" (formula "21") (term "0,1"))
                     (rule "eqSymm" (formula "21") (term "1,0"))
                     (rule "replace_known_right" (formula "21") (term "0,0,1,0,0") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "12")))
                     (rule "sortsDisjointModuloNull" (formula "21") (term "0,1"))
                     (rule "replace_known_right" (formula "21") (term "1,0,1") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                     (rule "nonNull" (formula "21") (inst "i=i"))
                     (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")))
                     (rule "greater_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "allRight" (formula "21") (inst "sk=i_0"))
                     (rule "impRight" (formula "21"))
                     (rule "andLeft" (formula "1"))
                     (rule "notRight" (formula "23"))
                     (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "6") (ifseqformula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "commute_or" (formula "17") (term "0,0"))
                     (rule "commute_or" (formula "19") (term "0,0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "allLeft" (formula "11") (inst "t=i_0"))
                     (rule "replace_known_left" (formula "11") (term "0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_commuteGeq" (formula "11") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1"))
                     (rule "leq_literals" (formula "11") (term "0,1"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "closeTrue" (formula "22"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "22"))
               (rule "closeTrue" (formula "22"))
            )
         )
         (branch "if x_1 false"
             (builtin "One Step Simplification" (formula "22"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "16"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=x_arr"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_arr"))
            (rule "assignment_read_attribute_this" (formula "21"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "assignment_to_primitive_array_component" (formula "21"))
            (branch "Normal Execution (x_arr != null)"
                (builtin "One Step Simplification" (formula "21"))
               (rule "eval_order_array_access1" (formula "21") (term "1") (inst "#v0=i_arr"))
               (rule "variableDeclarationAssign" (formula "21") (term "1"))
               (rule "variableDeclaration" (formula "21") (term "1") (newnames "i_arr"))
               (rule "assignment_read_attribute_this" (formula "21"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "dismissNonSelectedField" (formula "21") (term "0,1,0"))
               (rule "assignment_to_reference_array_component" (formula "21"))
               (branch "Normal Execution (i_arr != null)"
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "methodCallReturn" (formula "21") (term "1"))
                  (rule "assignment" (formula "21") (term "1"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "methodCallEmpty" (formula "21") (term "1"))
                  (rule "tryEmpty" (formula "21") (term "1"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (rule "andRight" (formula "21"))
                  (branch "Case 1"
                     (rule "andRight" (formula "21"))
                     (branch "Case 1"
                        (rule "andRight" (formula "21"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "21") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltRight" (formula "15"))
                           (rule "mul_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_geqRight" (formula "17"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0"))
                           (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                           (rule "nnf_ex2all" (formula "22"))
                           (rule "nnf_imp2or" (formula "9") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_notAnd" (formula "1") (term "0"))
                           (rule "nnf_notAnd" (formula "9") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "1") (term "1,0"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or" (formula "15") (term "0,0"))
                           (rule "shift_paren_or" (formula "1") (term "0"))
                           (rule "commute_or_2" (formula "1") (term "0"))
                           (rule "commute_or" (formula "9") (term "0,0"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "1") (term "0,0"))
                           (rule "commute_or" (formula "1") (term "0,0,0"))
                           (rule "allLeft" (formula "15") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "15") (term "1,0"))
                           (rule "applyEq" (formula "15") (term "0,0,1") (ifseqformula "19"))
                           (rule "eqSymm" (formula "15") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                           (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "15") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "15") (term "0,0"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "allLeft" (formula "9") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "1,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "9") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "18"))
                           (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                           (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "9") (term "0,0,1"))
                           (rule "leq_literals" (formula "9") (term "0,1"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "notLeft" (formula "9"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "allLeft" (formula "2") (inst "t=result_1"))
                           (rule "inEqSimp_commuteGeq" (formula "2") (term "1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (term "1,0") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "2") (term "0,1,0"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "pullOutSelect" (formula "2") (term "0,0,1") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "eqSymm" (formula "3") (term "0,1"))
                           (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                           (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "24"))
                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                           (rule "simplifySelectOfStore" (formula "2"))
                            (builtin "One Step Simplification" (formula "2"))
                           (rule "castDel" (formula "2") (term "0"))
                           (rule "applyEqReverse" (formula "3") (term "1,0,1") (ifseqformula "2"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "closeTrue" (formula "21"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_ltRight" (formula "15"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_geqRight" (formula "17"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0"))
                           (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "14"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                           (rule "nnf_imp2or" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "8") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                           (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                           (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                           (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,0,0,0"))
                           (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "22") (ifseqformula "5"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1"))
                           (rule "eqSymm" (formula "22") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,1,0,0"))
                           (rule "replace_known_right" (formula "22") (term "0,1,1,0,0") (ifseqformula "19"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "22") (term "1,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,1,0"))
                           (rule "sortsDisjointModuloNull" (formula "22") (term "0,1"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1,0"))
                           (rule "eqSymm" (formula "22") (term "1,0"))
                           (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "12"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,1"))
                           (rule "replace_known_right" (formula "22") (term "1,0,1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
                           (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "dismissNonSelectedField" (formula "22") (term "0,0,1"))
                           (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "nonNull" (formula "22") (inst "i=i"))
                           (rule "greater_literals" (formula "22") (term "0,1"))
                            (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
                           (rule "sub_literals" (formula "22") (term "2,1,0"))
                            (builtin "One Step Simplification" (formula "22"))
                           (rule "allRight" (formula "22") (inst "sk=i_0"))
                           (rule "impRight" (formula "22"))
                           (rule "notRight" (formula "23"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                           (rule "ifEqualsNull" (formula "1"))
                           (rule "replace_known_right" (formula "1") (term "1,0") (ifseqformula "25"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                           (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "7") (ifseqformula "24"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "commute_or" (formula "18") (term "0,0"))
                           (rule "commute_or" (formula "12") (term "0,0"))
                           (rule "commute_or_2" (formula "12") (term "0"))
                           (rule "allLeft" (formula "12") (inst "t=i_0"))
                           (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "12") (term "0,0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "4"))
                           (rule "andLeft" (formula "12"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                           (rule "add_literals" (formula "12") (term "1,1,0"))
                           (rule "times_zero_1" (formula "12") (term "1,0"))
                           (rule "add_zero_right" (formula "12") (term "0"))
                           (rule "leq_literals" (formula "12"))
                           (rule "closeFalse" (formula "12"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "closeTrue" (formula "21"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "allRight" (formula "21") (inst "sk=f_0"))
                     (rule "allRight" (formula "21") (inst "sk=o_0"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "21"))
                     (rule "orRight" (formula "21"))
                     (rule "eqSymm" (formula "24"))
                     (rule "inEqSimp_ltRight" (formula "15"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "andLeft" (formula "15"))
                     (rule "inEqSimp_geqRight" (formula "17"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "16") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                     (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "26"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (i_arr = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (i_arr != null, but zeroPos Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")) (ifInst ""  (formula "16")))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "false_right" (formula "22"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "andLeft" (formula "16"))
                  (rule "inEqSimp_geqRight" (formula "18"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0"))
                  (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                  (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "3"))
                  (rule "andLeft" (formula "17"))
                  (rule "inEqSimp_homoInEq1" (formula "17"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0"))
                  (rule "add_zero_right" (formula "17") (term "0"))
                  (rule "leq_literals" (formula "17"))
                  (rule "closeFalse" (formula "17"))
               )
               (branch "Array Store Exception (incompatible dynamic element type of i_arr and _role)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "1"))
                   (opengoal " ")
               )
            )
            (branch "Null Reference (x_arr = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (x_arr != null, but zeroPos Out of Bounds!)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "16")))
                (builtin "One Step Simplification" (formula "22"))
               (rule "false_right" (formula "22"))
               (rule "inEqSimp_ltRight" (formula "16"))
               (rule "times_zero_1" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "inEqSimp_geqRight" (formula "18"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0"))
               (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "17"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "17"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
      )
      (branch "Exceptional Post (posOfId)"
          (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "11"))
         (rule "close" (formula "15") (ifseqformula "14"))
      )
      (branch "Pre (posOfId)"
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "1")))
         (rule "inEqSimp_geqRight" (formula "11"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0"))
         (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "mul_literals" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "mul_literals" (formula "7") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "16") (ifseqformula "4"))
         (rule "eqSymm" (formula "16") (term "1,0"))
         (rule "eqSymm" (formula "16") (term "0,1"))
         (rule "replace_known_right" (formula "16") (term "0,0,1,0,0") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "9")))
         (rule "sortsDisjointModuloNull" (formula "16") (term "0,1"))
         (rule "replace_known_right" (formula "16") (term "1,0,1") (ifseqformula "12"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
          (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")))
         (rule "greater_literals" (formula "16") (term "0"))
          (builtin "One Step Simplification" (formula "16"))
         (rule "allRight" (formula "16") (inst "sk=i_0"))
         (rule "impRight" (formula "16"))
         (rule "andLeft" (formula "1"))
         (rule "notRight" (formula "18"))
         (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "5") (ifseqformula "16"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "12"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or" (formula "14") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "allLeft" (formula "10") (inst "t=i_0"))
         (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "10") (term "1") (ifseqformula "3"))
         (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
         (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "10") (term "0,0,1"))
         (rule "leq_literals" (formula "10") (term "0,1"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "2"))
         (rule "qeq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "closeFalse" (formula "10"))
      )
   )
)
(branch "Exceptional Post (posOfId)"
    (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "10"))
   (rule "notLeft" (formula "8"))
   (rule "close" (formula "11") (ifseqformula "10"))
)
(branch "Pre (posOfId)"
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,0,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,0,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,0,0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
   (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,1,0,0"))
   (rule "Class_invariant_axiom_for_edu_kit_informatik_pcc_service_accesscontrol_AccessControl" (formula "12") (ifseqformula "3"))
   (rule "eqSymm" (formula "12") (term "1,0"))
   (rule "eqSymm" (formula "12") (term "0,1"))
   (rule "replace_known_right" (formula "12") (term "0,1,1,0,0") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "7")))
   (rule "sortsDisjointModuloNull" (formula "12") (term "0,1"))
   (rule "replace_known_right" (formula "12") (term "0,0,1") (ifseqformula "9"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "8")))
   (rule "nonNull" (formula "12") (inst "i=i"))
   (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
   (rule "greater_literals" (formula "12") (term "0"))
    (builtin "One Step Simplification" (formula "12"))
   (rule "allRight" (formula "12") (inst "sk=i_0"))
   (rule "impRight" (formula "12"))
   (rule "andLeft" (formula "1"))
   (rule "notRight" (formula "14"))
   (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "4") (ifseqformula "12"))
   (rule "inEqSimp_ltToLeq" (formula "3"))
   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "3") (term "0"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "10"))
   (rule "inEqSimp_sepNegMonomial0" (formula "3"))
   (rule "polySimp_mulLiterals" (formula "3") (term "0"))
   (rule "polySimp_elimOne" (formula "3") (term "0"))
   (rule "commute_or_2" (formula "9") (term "0"))
   (rule "commute_or" (formula "9") (term "0,0"))
   (rule "commute_or_2" (formula "9") (term "0"))
   (rule "allLeft" (formula "9") (inst "t=i_0"))
   (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "2"))
   (rule "qeq_literals" (formula "9") (term "0,0"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_contradInEq1" (formula "9") (ifseqformula "3"))
   (rule "andLeft" (formula "9"))
   (rule "inEqSimp_homoInEq1" (formula "9"))
   (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
   (rule "add_literals" (formula "9") (term "1,1,0"))
   (rule "times_zero_1" (formula "9") (term "1,0"))
   (rule "add_zero_right" (formula "9") (term "0"))
   (rule "leq_literals" (formula "9"))
   (rule "closeFalse" (formula "9"))
)
)
}
